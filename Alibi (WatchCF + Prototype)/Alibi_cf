{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Alibi_cf","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyO2DJqYND+XTvDFQS3UuA9J"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"grr8PiZcKiPH","executionInfo":{"status":"ok","timestamp":1624256113165,"user_tz":-600,"elapsed":2284,"user":{"displayName":"Leon C","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GirxcSFELKJsfIAZZuEJ9ZecG__1hzk1e5zOJAqUA=s64","userId":"16235014008629953036"}},"outputId":"aa9e40f7-bcc6-4f56-b2e6-3a1913e2e32c"},"source":["############# Initialise on Google Colab \n","from google.colab import drive\n","from pydrive.auth import GoogleAuth\n","from pydrive.drive import GoogleDrive\n","from google.colab import auth\n","from oauth2client.client import GoogleCredentials\n","from pydrive.auth import GoogleAuth\n","from pydrive.drive import GoogleDrive\n","from google.colab import auth\n","from oauth2client.client import GoogleCredentials \n","drive.mount('/content/gdrive', force_remount=True)\n","auth.authenticate_user()\n","gauth = GoogleAuth()\n","gauth.credentials = GoogleCredentials.get_application_default()\n","gdrive = GoogleDrive(gauth)\n","gdrive.CreateFile({\"id\": \"1wwSN3AIl_dmayKENu5jnc1BRaNPe8BZc\"}).GetContentFile(\"learning.py\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Mounted at /content/gdrive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1NsqQdJRKmOy","executionInfo":{"status":"ok","timestamp":1624256119332,"user_tz":-600,"elapsed":6175,"user":{"displayName":"Leon C","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GirxcSFELKJsfIAZZuEJ9ZecG__1hzk1e5zOJAqUA=s64","userId":"16235014008629953036"}},"outputId":"cbed6a85-cf16-4713-c4ca-c892252ff266"},"source":["#### Installing Deps ####\n","!pip3 install pyAgrum\n","!pip3 install alibi\n","#### Removing str encoding error ####\n","# !python3 -m pip install 'h5py==2.10.0' --force-reinstall"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: pyAgrum in /usr/local/lib/python3.7/dist-packages (0.20.3)\n","Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from pyAgrum) (1.15.0)\n","Requirement already satisfied: configparser in /usr/local/lib/python3.7/dist-packages (from pyAgrum) (5.0.2)\n","Requirement already satisfied: numpy>=1.8.1 in /usr/local/lib/python3.7/dist-packages (from pyAgrum) (1.19.5)\n","Requirement already satisfied: alibi in /usr/local/lib/python3.7/dist-packages (0.5.8)\n","Requirement already satisfied: attrs<21.0.0,>=19.2.0 in /usr/local/lib/python3.7/dist-packages (from alibi) (20.3.0)\n","Requirement already satisfied: spacy[lookups]<4.0.0,>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from alibi) (2.2.4)\n","Requirement already satisfied: typing-extensions>=3.7.2; python_version < \"3.8\" in /usr/local/lib/python3.7/dist-packages (from alibi) (3.7.4.3)\n","Requirement already satisfied: scikit-image!=0.17.1,<0.19,>=0.14.2 in /usr/local/lib/python3.7/dist-packages (from alibi) (0.16.2)\n","Requirement already satisfied: pandas<2.0.0,>=0.23.3 in /usr/local/lib/python3.7/dist-packages (from alibi) (1.1.5)\n","Requirement already satisfied: numpy<2.0.0,>=1.16.2 in /usr/local/lib/python3.7/dist-packages (from alibi) (1.19.5)\n","Requirement already satisfied: requests<3.0.0,>=2.21.0 in /usr/local/lib/python3.7/dist-packages (from alibi) (2.23.0)\n","Requirement already satisfied: Pillow<9.0,>=5.4.1 in /usr/local/lib/python3.7/dist-packages (from alibi) (7.1.2)\n","Requirement already satisfied: tensorflow<2.5.0,>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from alibi) (2.4.2)\n","Requirement already satisfied: matplotlib<4.0.0,>=3.0.0 in /usr/local/lib/python3.7/dist-packages (from alibi) (3.2.2)\n","Requirement already satisfied: dill<0.4.0,>=0.3.0 in /usr/local/lib/python3.7/dist-packages (from alibi) (0.3.4)\n","Requirement already satisfied: scikit-learn<0.25.0,>=0.20.2 in /usr/local/lib/python3.7/dist-packages (from alibi) (0.22.2.post1)\n","Requirement already satisfied: scipy<2.0.0,>=1.1.0 in /usr/local/lib/python3.7/dist-packages (from alibi) (1.4.1)\n","Requirement already satisfied: blis<0.5.0,>=0.4.0 in /usr/local/lib/python3.7/dist-packages (from spacy[lookups]<4.0.0,>=2.0.0->alibi) (0.4.1)\n","Requirement already satisfied: plac<1.2.0,>=0.9.6 in /usr/local/lib/python3.7/dist-packages (from spacy[lookups]<4.0.0,>=2.0.0->alibi) (1.1.3)\n","Requirement already satisfied: thinc==7.4.0 in /usr/local/lib/python3.7/dist-packages (from spacy[lookups]<4.0.0,>=2.0.0->alibi) (7.4.0)\n","Requirement already satisfied: preshed<3.1.0,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from spacy[lookups]<4.0.0,>=2.0.0->alibi) (3.0.5)\n","Requirement already satisfied: murmurhash<1.1.0,>=0.28.0 in /usr/local/lib/python3.7/dist-packages (from spacy[lookups]<4.0.0,>=2.0.0->alibi) (1.0.5)\n","Requirement already satisfied: tqdm<5.0.0,>=4.38.0 in /usr/local/lib/python3.7/dist-packages (from spacy[lookups]<4.0.0,>=2.0.0->alibi) (4.41.1)\n","Requirement already satisfied: wasabi<1.1.0,>=0.4.0 in /usr/local/lib/python3.7/dist-packages (from spacy[lookups]<4.0.0,>=2.0.0->alibi) (0.8.2)\n","Requirement already satisfied: catalogue<1.1.0,>=0.0.7 in /usr/local/lib/python3.7/dist-packages (from spacy[lookups]<4.0.0,>=2.0.0->alibi) (1.0.0)\n","Requirement already satisfied: srsly<1.1.0,>=1.0.2 in /usr/local/lib/python3.7/dist-packages (from spacy[lookups]<4.0.0,>=2.0.0->alibi) (1.0.5)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.7/dist-packages (from spacy[lookups]<4.0.0,>=2.0.0->alibi) (57.0.0)\n","Requirement already satisfied: cymem<2.1.0,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from spacy[lookups]<4.0.0,>=2.0.0->alibi) (2.0.5)\n","Requirement already satisfied: spacy-lookups-data<0.2.0,>=0.0.5; extra == \"lookups\" in /usr/local/lib/python3.7/dist-packages (from spacy[lookups]<4.0.0,>=2.0.0->alibi) (0.1.0)\n","Requirement already satisfied: networkx>=2.0 in /usr/local/lib/python3.7/dist-packages (from scikit-image!=0.17.1,<0.19,>=0.14.2->alibi) (2.5.1)\n","Requirement already satisfied: imageio>=2.3.0 in /usr/local/lib/python3.7/dist-packages (from scikit-image!=0.17.1,<0.19,>=0.14.2->alibi) (2.4.1)\n","Requirement already satisfied: PyWavelets>=0.4.0 in /usr/local/lib/python3.7/dist-packages (from scikit-image!=0.17.1,<0.19,>=0.14.2->alibi) (1.1.1)\n","Requirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.7/dist-packages (from pandas<2.0.0,>=0.23.3->alibi) (2018.9)\n","Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas<2.0.0,>=0.23.3->alibi) (2.8.1)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0,>=2.21.0->alibi) (2021.5.30)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0,>=2.21.0->alibi) (3.0.4)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0,>=2.21.0->alibi) (1.24.3)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0,>=2.21.0->alibi) (2.10)\n","Requirement already satisfied: protobuf>=3.9.2 in /usr/local/lib/python3.7/dist-packages (from tensorflow<2.5.0,>=2.0.0->alibi) (3.12.4)\n","Requirement already satisfied: six~=1.15.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow<2.5.0,>=2.0.0->alibi) (1.15.0)\n","Requirement already satisfied: wheel~=0.35 in /usr/local/lib/python3.7/dist-packages (from tensorflow<2.5.0,>=2.0.0->alibi) (0.36.2)\n","Requirement already satisfied: opt-einsum~=3.3.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow<2.5.0,>=2.0.0->alibi) (3.3.0)\n","Requirement already satisfied: h5py~=2.10.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow<2.5.0,>=2.0.0->alibi) (2.10.0)\n","Requirement already satisfied: termcolor~=1.1.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow<2.5.0,>=2.0.0->alibi) (1.1.0)\n","Requirement already satisfied: tensorboard~=2.4 in /usr/local/lib/python3.7/dist-packages (from tensorflow<2.5.0,>=2.0.0->alibi) (2.5.0)\n","Requirement already satisfied: tensorflow-estimator<2.5.0,>=2.4.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow<2.5.0,>=2.0.0->alibi) (2.4.0)\n","Requirement already satisfied: wrapt~=1.12.1 in /usr/local/lib/python3.7/dist-packages (from tensorflow<2.5.0,>=2.0.0->alibi) (1.12.1)\n","Requirement already satisfied: grpcio~=1.32.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow<2.5.0,>=2.0.0->alibi) (1.32.0)\n","Requirement already satisfied: absl-py~=0.10 in /usr/local/lib/python3.7/dist-packages (from tensorflow<2.5.0,>=2.0.0->alibi) (0.12.0)\n","Requirement already satisfied: flatbuffers~=1.12.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow<2.5.0,>=2.0.0->alibi) (1.12)\n","Requirement already satisfied: google-pasta~=0.2 in /usr/local/lib/python3.7/dist-packages (from tensorflow<2.5.0,>=2.0.0->alibi) (0.2.0)\n","Requirement already satisfied: gast==0.3.3 in /usr/local/lib/python3.7/dist-packages (from tensorflow<2.5.0,>=2.0.0->alibi) (0.3.3)\n","Requirement already satisfied: keras-preprocessing~=1.1.2 in /usr/local/lib/python3.7/dist-packages (from tensorflow<2.5.0,>=2.0.0->alibi) (1.1.2)\n","Requirement already satisfied: astunparse~=1.6.3 in /usr/local/lib/python3.7/dist-packages (from tensorflow<2.5.0,>=2.0.0->alibi) (1.6.3)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.7/dist-packages (from matplotlib<4.0.0,>=3.0.0->alibi) (0.10.0)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib<4.0.0,>=3.0.0->alibi) (1.3.1)\n","Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib<4.0.0,>=3.0.0->alibi) (2.4.7)\n","Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.7/dist-packages (from scikit-learn<0.25.0,>=0.20.2->alibi) (1.0.1)\n","Requirement already satisfied: importlib-metadata>=0.20; python_version < \"3.8\" in /usr/local/lib/python3.7/dist-packages (from catalogue<1.1.0,>=0.0.7->spacy[lookups]<4.0.0,>=2.0.0->alibi) (4.5.0)\n","Requirement already satisfied: decorator<5,>=4.3 in /usr/local/lib/python3.7/dist-packages (from networkx>=2.0->scikit-image!=0.17.1,<0.19,>=0.14.2->alibi) (4.4.2)\n","Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.7/dist-packages (from tensorboard~=2.4->tensorflow<2.5.0,>=2.0.0->alibi) (3.3.4)\n","Requirement already satisfied: google-auth-oauthlib<0.5,>=0.4.1 in /usr/local/lib/python3.7/dist-packages (from tensorboard~=2.4->tensorflow<2.5.0,>=2.0.0->alibi) (0.4.4)\n","Requirement already satisfied: google-auth<2,>=1.6.3 in /usr/local/lib/python3.7/dist-packages (from tensorboard~=2.4->tensorflow<2.5.0,>=2.0.0->alibi) (1.31.0)\n","Requirement already satisfied: tensorboard-plugin-wit>=1.6.0 in /usr/local/lib/python3.7/dist-packages (from tensorboard~=2.4->tensorflow<2.5.0,>=2.0.0->alibi) (1.8.0)\n","Requirement already satisfied: werkzeug>=0.11.15 in /usr/local/lib/python3.7/dist-packages (from tensorboard~=2.4->tensorflow<2.5.0,>=2.0.0->alibi) (1.0.1)\n","Requirement already satisfied: tensorboard-data-server<0.7.0,>=0.6.0 in /usr/local/lib/python3.7/dist-packages (from tensorboard~=2.4->tensorflow<2.5.0,>=2.0.0->alibi) (0.6.1)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata>=0.20; python_version < \"3.8\"->catalogue<1.1.0,>=0.0.7->spacy[lookups]<4.0.0,>=2.0.0->alibi) (3.4.1)\n","Requirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.7/dist-packages (from google-auth-oauthlib<0.5,>=0.4.1->tensorboard~=2.4->tensorflow<2.5.0,>=2.0.0->alibi) (1.3.0)\n","Requirement already satisfied: rsa<5,>=3.1.4; python_version >= \"3.6\" in /usr/local/lib/python3.7/dist-packages (from google-auth<2,>=1.6.3->tensorboard~=2.4->tensorflow<2.5.0,>=2.0.0->alibi) (4.7.2)\n","Requirement already satisfied: cachetools<5.0,>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from google-auth<2,>=1.6.3->tensorboard~=2.4->tensorflow<2.5.0,>=2.0.0->alibi) (4.2.2)\n","Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.7/dist-packages (from google-auth<2,>=1.6.3->tensorboard~=2.4->tensorflow<2.5.0,>=2.0.0->alibi) (0.2.8)\n","Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.7/dist-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib<0.5,>=0.4.1->tensorboard~=2.4->tensorflow<2.5.0,>=2.0.0->alibi) (3.1.1)\n","Requirement already satisfied: pyasn1>=0.1.3 in /usr/local/lib/python3.7/dist-packages (from rsa<5,>=3.1.4; python_version >= \"3.6\"->google-auth<2,>=1.6.3->tensorboard~=2.4->tensorflow<2.5.0,>=2.0.0->alibi) (0.4.8)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"suJknDmvK5rm","executionInfo":{"status":"ok","timestamp":1624256122815,"user_tz":-600,"elapsed":285,"user":{"displayName":"Leon C","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GirxcSFELKJsfIAZZuEJ9ZecG__1hzk1e5zOJAqUA=s64","userId":"16235014008629953036"}},"outputId":"1abf09ec-a8c5-4189-bd09-338ac45cb16d"},"source":["import os\n","\n","import tensorflow as tf\n","tf.get_logger().setLevel(40) # suppress deprecation messages\n","tf.compat.v1.disable_v2_behavior() # disable TF2 behaviour as alibi code still relies on TF1 constructs\n","\n","### Alibi lib.\n","from alibi.explainers import CounterFactualProto, CounterFactual\n","\n","import numpy as np\n","import pandas as pd\n","\n","from learning import *\n","from time import time\n","\n","### Plotting\n","import matplotlib\n","import matplotlib.pyplot as plt\n","from IPython.display import display\n","from enum import Enum\n","%matplotlib inline\n","\n","print('TF version: ', tf.__version__)\n","print('Eager execution enabled (DiCE should be True, Alibi should be False): ', tf.executing_eagerly()) # False\n","seed = 123\n","tf.random.set_seed(seed)\n","np.random.seed(seed) "],"execution_count":null,"outputs":[{"output_type":"stream","text":["TF version:  2.4.2\n","Eager execution enabled (DiCE should be True, Alibi should be False):  False\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"QJ1_qfiqNDh7"},"source":["## Retrieve data"]},{"cell_type":"code","metadata":{"id":"YNuz_cQAKnqX"},"source":["data=pd.read_csv('gdrive/My Drive//Counterfactual-prototype-main/datasets/diabetes.csv')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Y8jI1ks8L5r3","executionInfo":{"status":"ok","timestamp":1624256124888,"user_tz":-600,"elapsed":9,"user":{"displayName":"Leon C","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GirxcSFELKJsfIAZZuEJ9ZecG__1hzk1e5zOJAqUA=s64","userId":"16235014008629953036"}},"outputId":"a239da5b-c0d1-4c06-a8c9-9bb6194a8bb6"},"source":["# Giving current root path\n","PATH = \"gdrive/My Drive//Counterfactual-prototype-main/\"\n","\n","# name of dataset\n","DATASET_NAME = \"diabetes.csv\"\n","\n","# variable containing the class labels in this case the dataset contains:\n","# 0 - if not diabetes\n","# 1 - if diabetes\n","class_var = \"Outcome\"\n","\n","# load dataset\n","dataset_path = PATH + \"datasets/\" + DATASET_NAME\n","data = pd.read_csv( dataset_path )\n","\n","# features\n","feature_names = data.drop([class_var], axis=1).columns.to_list()\n","\n","# balance dataset\n","sampled_data = data.sample(frac=1)\n","sampled_data = sampled_data[ sampled_data[\"Outcome\"] == 0]\n","\n","no_data = sampled_data.sample(frac=1)[0:268]\n","yes_data = data[ data[\"Outcome\"] == 1]\n","\n","balanced_data = [no_data,yes_data]\n","balanced_data = pd.concat(balanced_data)\n","\n","# apply one hot encoder to data\n","# standardize the input between 0 and 1\n","X, Y, encoder, scaler = encode_data( balanced_data, class_var)\n","\n","n_features = X.shape[1]\n","n_classes = len(data[class_var].unique())\n","\n","# load existing training data\n","print(\"Loading training data...\")\n","X_train, Y_train, X_test, Y_test, X_validation, Y_validation= load_training_data( dataset_path )\n","\n","input_data_shape = np.array([X[0]]).shape\n","\n","print(\"====================Features====================\")\n","print(feature_names)\n","print(\"================================================\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Loading training data...\n","====================Features====================\n","['Pregnancies', 'Glucose', 'BloodPressure', 'SkinThickness', 'Insulin', 'BMI', 'DiabetesPedigreeFunction', 'Age']\n","================================================\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"bgxZxPytNAGM"},"source":["## Load model"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Yse3Nq2JM8yG","executionInfo":{"status":"ok","timestamp":1624256127872,"user_tz":-600,"elapsed":478,"user":{"displayName":"Leon C","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GirxcSFELKJsfIAZZuEJ9ZecG__1hzk1e5zOJAqUA=s64","userId":"16235014008629953036"}},"outputId":"d2f7aece-ca19-4c7a-86b9-fe9c6eef8f15"},"source":["# the best performing model was obtained with 5 hidden layers with 12 neurons each\n","model_name = \"model_h5_N12\"\n","\n","# specify paths where the blackbox model was saved\n","path_serialisation_model = PATH + \"training/\" + DATASET_NAME.replace(\".csv\", \"\") + \"/model/\" \n","path_serialisation_histr = PATH + \"training/\" + DATASET_NAME.replace(\".csv\", \"\") + \"/history/\" \n","\n","# load model and model performance history\n","print(\"Loading Blackbox model...\")\n","model_history = load_model_history( model_name, path_serialisation_histr )\n","model = load_model( model_name, path_serialisation_model )\n","\n","# check modelxw\n","model.summary()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Loading Blackbox model...\n","Loaded model from disk\n","Model: \"model_h5_N12\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","dense_293 (Dense)            (None, 12)                108       \n","_________________________________________________________________\n","dense_294 (Dense)            (None, 12)                156       \n","_________________________________________________________________\n","dense_295 (Dense)            (None, 12)                156       \n","_________________________________________________________________\n","dense_296 (Dense)            (None, 12)                156       \n","_________________________________________________________________\n","dense_297 (Dense)            (None, 12)                156       \n","_________________________________________________________________\n","dense_298 (Dense)            (None, 12)                156       \n","_________________________________________________________________\n","dense_299 (Dense)            (None, 2)                 26        \n","=================================================================\n","Total params: 914\n","Trainable params: 914\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"BgpvrIkKNB8k"},"source":["class PredictionType(Enum):\n","  TruePositive = \"TruePositive\"\n","  TrueNegative = \"TrueNegative\"\n","  FalsePositive = \"FalsePositive\"\n","  FalseNegative = \"FalseNegative\"\n","  \n","class AllPacks(object):\n","  '''\n","  Class for storing cases in different prediction type\n","\n","  '''\n","  def __init__(self, true_positives,true_negatives, false_positives, false_negatives):\n","    # constructor\n","    self.true_positives = true_positives\n","    self.true_negatives = true_negatives\n","    self.false_positives = false_positives\n","    self.false_negatives = false_negatives\n","  def __len__(self,):\n","    return len(self.true_positives)\\\n","    +len(self.true_negatives)\\\n","    +len(self.false_positives)\\\n","    +len(self.false_negatives)\n","    \n","  def true_positives_len(self,):\n","    return len(self.true_positives)\n","\n","  def get_len(self, p_t):\n","    if p_t == PredictionType.TruePositive:\n","      return self.true_positives_len()\n","    elif p_t == PredictionType.TrueNegative:\n","      return self.true_negatives_len()\n","    elif p_t == PredictionType.FalsePositive:\n","      return self.false_positives_len()\n","    elif p_t == PredictionType.FalseNegative:\n","      return self.false_negatives_len()\n","    else:\n","      raise NotImplemented('This prediction type is unsupported.');\n","\n","  def true_negatives_len(self,):\n","    return len(self.true_negatives)\n","  \n","  def false_negatives_len(self,):\n","    return len(self.false_negatives)\n","  \n","  def false_positives_len(self,):\n","    return len(self.false_positives)\n","\n","  def get_instance(self, p_t, index):\n","    if p_t == PredictionType.TruePositive:\n","      return self.get_true_positive(index)\n","    elif p_t == PredictionType.TrueNegative:\n","      return self.get_true_negative(index)\n","    elif p_t == PredictionType.FalsePositive:\n","      return self.get_false_positive(index)\n","    elif p_t == PredictionType.FalseNegative:\n","      return self.get_false_nagative(index)\n","    else:\n","      raise NotImplemented('This prediction type is unsupported.');\n","\n","  def get_true_positive(self, index = 0):\n","    try:\n","      return self.true_positives[index]\n","    except:\n","      raise ValueError(\"Input index out of range, true positive only have [%d] cases\" % (self.true_positives_len()))\n","  def get_true_negative(self, index = 0):\n","    try:\n","      return self.true_negatives[index]\n","    except:\n","      raise ValueError(\"Input index out of range, true negative only have [%d] cases\" % (self.true_negatives_len()))\n","  def get_false_positive(self, index = 0):\n","    try:\n","      return self.false_positives[index]\n","    except:\n","      raise ValueError(\"Input index out of range, true positive only have [%d] cases\" % (self.false_positives_len()))\n","  def get_false_nagative(self, index = 0):\n","    try:\n","      return self.false_negatives[index]\n","    except:\n","      raise ValueError(\"Input index out of range, true positive only have [%d] cases\" % (self.false_negatives_len()))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"dtCqFZoNNVaH"},"source":["diabetes_feature_range = (X_train.min(axis=0), X_train.max(axis=0))\n","# store all information \n","local_data_dict = generate_local_predictions( X_test, Y_test, model, scaler, encoder )\n","# sorting by different conditions\n","true_positives,true_negatives, false_positives, false_negatives = wrap_information( local_data_dict )"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ThJ9LlUANYqM"},"source":["all_packs = AllPacks(true_positives,true_negatives, false_positives, false_negatives)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0kDhvCzLqvNV","executionInfo":{"status":"ok","timestamp":1624256218203,"user_tz":-600,"elapsed":5,"user":{"displayName":"Leon C","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GirxcSFELKJsfIAZZuEJ9ZecG__1hzk1e5zOJAqUA=s64","userId":"16235014008629953036"}},"outputId":"4d3fac51-227a-4369-f1e4-cd8f680021df"},"source":["all_packs.get_instance(PredictionType.TruePositive, 0)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'ground_truth': 1,\n"," 'index': 0,\n"," 'original_vector': [1.0, 189.0, 56.065574, 23.0, 846.0, 30.1, 0.391938, 59.0],\n"," 'prediction_type': 'TRUE POSITIVE',\n"," 'predictions': 1,\n"," 'scaled_vector': [0.05882352941176471,\n","  0.9497487437185927,\n","  0.4918032786885247,\n","  0.23232323232323235,\n","  1.0,\n","  0.4485842026825633,\n","  0.13404710920770876,\n","  0.7450980392156861]}"]},"metadata":{"tags":[]},"execution_count":155}]},{"cell_type":"code","metadata":{"id":"2ISx7x2DNa3y"},"source":["##### Utils #####\n","def print_block(title, content, mark_times=20):\n","  upper_line = mark_times*(\"=\") + title + mark_times*(\"=\")\n","  bottom_line = len(upper_line) *\"=\"\n","  print(upper_line)\n","  if (type(content) == pd.DataFrame):\n","    display(content)\n","  else:\n","    print(\"| \\t\" + str(content))\n","  print(bottom_line)\n","  print(\"\\n\")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"IrzO-TEaNuWg"},"source":["class AlibiCounterfactaulWrapper(object):\n","  '''\n","  Wrapper class to generate alibi cf\n","  '''\n","  def __init__(self, counterfactual_proto, counterfactual):\n","    self.counterfactual_proto__ = counterfactual_proto\n","    self.counterfactual__ = counterfactual\n","    \n","  def counterfactual_proto_explain(self, case):\n","    return self.run_counterfactual_print_result(case, self.counterfactual_proto__)\n","\n","  def counterfactual_explain(self, case):\n","    return self.run_counterfactual_print_result(case, self.counterfactual__)\n","  \n","  def run_counterfactual_print_result(self, case, cf):\n","    return_case = deepcopy(case)\n","    # print_block(\"\", \"Finding counterfactuals...\")\n","    input_data = np.array([case[\"scaled_vector\"]])\n","    start_time = time()\n","    explanation = cf.explain(input_data)\n","    end_time = time()\n","    time_took = end_time - start_time\n","    # print_block(\"Time Took\", \"%.3f sec\" % (time_took))\n","    if explanation.cf == None:\n","      # print_block(\"\", \"No counterfactaul found!\")\n","      return_case['cf'] = [None] * input_data.shape[1]\n","    else:  \n","      counterfactual = scaler.inverse_transform(explanation.cf['X'])\n","      return_case['cf'] = counterfactual.tolist()[0]\n","\n","    return_case['time'] = time_took\n","    # self.print_counterfactual_results(case, counterfactual)\n","    return return_case\n","\n","  def print_counterfactual_results(self, case, counterfactual):\n","    print_block(\"Prediction type\", case[\"prediction_type\"], mark_times=7)\n","    print_block(\"Black box prediction\", case[\"predictions\"], mark_times=3)\n","    print_block(\"Ground truth\", case[\"ground_truth\"], mark_times= 5)\n","    print_block(\"Oringal input\", pd.DataFrame([case[\"original_vector\"]], columns=feature_names),mark_times = 60)\n","    print_block(\"Counterfactual\", pd.DataFrame(counterfactual, columns=feature_names), mark_times=60)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"IFp-KTEUN0Rj","executionInfo":{"status":"ok","timestamp":1624256675843,"user_tz":-600,"elapsed":471,"user":{"displayName":"Leon C","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GirxcSFELKJsfIAZZuEJ9ZecG__1hzk1e5zOJAqUA=s64","userId":"16235014008629953036"}},"outputId":"9730f651-8d18-464e-b394-a87d9901446c"},"source":["##### Initialise Cfs\n","\n","cf = CounterFactual(model, input_data_shape, distance_fn='l1', target_proba=1.0,\n","                    target_class='other', max_iter=3000, early_stop=150, lam_init=1e-1,\n","                    max_lam_steps=10, tol=0.05, learning_rate_init=0.1,\n","                    feature_range=diabetes_feature_range, eps=0.01, init='identity',\n","                    decay=True, write_dir=None, debug=False)\n","\n","cf_p = CounterFactualProto(model, input_data_shape, use_kdtree=True, theta=10., max_iterations=1000,\n","                         feature_range=diabetes_feature_range,\n","                         c_init=1., c_steps=10)\n","\n","cf_p.fit(X_train)\n","\n","\"\""],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["''"]},"metadata":{"tags":[]},"execution_count":176}]},{"cell_type":"code","metadata":{"id":"F885Ib1SfEJw"},"source":["alibi_cf =  AlibiCounterfactaulWrapper(counterfactual_proto= cf_p, counterfactual= cf)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZUuXcGguryvs"},"source":["output_column_names= [ f'orgin_{f}' for f in feature_names] + [ f'cf_{f}' for f in feature_names] + ['time(sec)'] + [\"prediction_type\"]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"RPe4Uo8sq4Ne"},"source":["def generate_df_for_all(packs, cf_func):\n","  ### Create an empty dataframe for appending data.\n","  result_df = pd.DataFrame({}, columns= output_column_names)\n","\n","  ### Loop through each predict type.\n","  for p_t in [PredictionType.TruePositive, PredictionType.TrueNegative, PredictionType.FalsePositive, PredictionType.FalseNegative]:\n","    print_block(\"\",\"Doing %s\" % p_t.value)\n","\n","    ### Get the length, so we can through all the instance in this predict type.\n","    total_length = packs.get_len(p_t)\n","    \n","    ### Loop through all the instance in this predict type.\n","    for i in range(total_length):\n","\n","      print_block(\"Instance %d\" %i, \"Running...\")\n","\n","      ### Get the result (including counterfactal and running time) from the cf_func.\n","      returned_case = cf_func(packs.get_instance(p_t, i))\n","\n","      ### Using the information from returned_case to create a dataframe (for appending to result_df).\n","      df_i = pd.DataFrame([\n","      returned_case[\"original_vector\"] + returned_case['cf'] + [returned_case['time'], returned_case['prediction_type']]],columns=output_column_names)\n","\n","      ### appending the current result to the total result dataframe.\n","      result_df = result_df.append(df_i)\n","  return result_df"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"MHmMzuU2sEgT","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1624258282698,"user_tz":-600,"elapsed":1340705,"user":{"displayName":"Leon C","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GirxcSFELKJsfIAZZuEJ9ZecG__1hzk1e5zOJAqUA=s64","userId":"16235014008629953036"}},"outputId":"19e95414-9d6a-4332-a7ae-34b425861dbc"},"source":[" cf_result_df = generate_df_for_all(all_packs, alibi_cf.counterfactual_explain)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["========================================\n","| \tDoing TruePositive\n","========================================\n","\n","\n","====================Instance 0====================\n","| \tRunning...\n","==================================================\n","\n","\n","====================Instance 1====================\n","| \tRunning...\n","==================================================\n","\n","\n","====================Instance 2====================\n","| \tRunning...\n","==================================================\n","\n","\n","====================Instance 3====================\n","| \tRunning...\n","==================================================\n","\n","\n","====================Instance 4====================\n","| \tRunning...\n","==================================================\n","\n","\n","====================Instance 5====================\n","| \tRunning...\n","==================================================\n","\n","\n","====================Instance 6====================\n","| \tRunning...\n","==================================================\n","\n","\n","====================Instance 7====================\n","| \tRunning...\n","==================================================\n","\n","\n","====================Instance 8====================\n","| \tRunning...\n","==================================================\n","\n","\n","====================Instance 9====================\n","| \tRunning...\n","==================================================\n","\n","\n","====================Instance 10====================\n","| \tRunning...\n","===================================================\n","\n","\n","====================Instance 11====================\n","| \tRunning...\n","===================================================\n","\n","\n","====================Instance 12====================\n","| \tRunning...\n","===================================================\n","\n","\n","====================Instance 13====================\n","| \tRunning...\n","===================================================\n","\n","\n","====================Instance 14====================\n","| \tRunning...\n","===================================================\n","\n","\n","====================Instance 15====================\n","| \tRunning...\n","===================================================\n","\n","\n","====================Instance 16====================\n","| \tRunning...\n","===================================================\n","\n","\n","====================Instance 17====================\n","| \tRunning...\n","===================================================\n","\n","\n","====================Instance 18====================\n","| \tRunning...\n","===================================================\n","\n","\n","====================Instance 19====================\n","| \tRunning...\n","===================================================\n","\n","\n","====================Instance 20====================\n","| \tRunning...\n","===================================================\n","\n","\n","====================Instance 21====================\n","| \tRunning...\n","===================================================\n","\n","\n","====================Instance 22====================\n","| \tRunning...\n","===================================================\n","\n","\n","====================Instance 23====================\n","| \tRunning...\n","===================================================\n","\n","\n","====================Instance 24====================\n","| \tRunning...\n","===================================================\n","\n","\n","====================Instance 25====================\n","| \tRunning...\n","===================================================\n","\n","\n","====================Instance 26====================\n","| \tRunning...\n","===================================================\n","\n","\n","====================Instance 27====================\n","| \tRunning...\n","===================================================\n","\n","\n","====================Instance 28====================\n","| \tRunning...\n","===================================================\n","\n","\n","====================Instance 29====================\n","| \tRunning...\n","===================================================\n","\n","\n","====================Instance 30====================\n","| \tRunning...\n","===================================================\n","\n","\n","====================Instance 31====================\n","| \tRunning...\n","===================================================\n","\n","\n","====================Instance 32====================\n","| \tRunning...\n","===================================================\n","\n","\n","========================================\n","| \tDoing TrueNegative\n","========================================\n","\n","\n","====================Instance 0====================\n","| \tRunning...\n","==================================================\n","\n","\n","====================Instance 1====================\n","| \tRunning...\n","==================================================\n","\n","\n","====================Instance 2====================\n","| \tRunning...\n","==================================================\n","\n","\n","====================Instance 3====================\n","| \tRunning...\n","==================================================\n","\n","\n","====================Instance 4====================\n","| \tRunning...\n","==================================================\n","\n","\n","====================Instance 5====================\n","| \tRunning...\n","==================================================\n","\n","\n","====================Instance 6====================\n","| \tRunning...\n","==================================================\n","\n","\n","====================Instance 7====================\n","| \tRunning...\n","==================================================\n","\n","\n","====================Instance 8====================\n","| \tRunning...\n","==================================================\n","\n","\n","====================Instance 9====================\n","| \tRunning...\n","==================================================\n","\n","\n","====================Instance 10====================\n","| \tRunning...\n","===================================================\n","\n","\n","====================Instance 11====================\n","| \tRunning...\n","===================================================\n","\n","\n","====================Instance 12====================\n","| \tRunning...\n","===================================================\n","\n","\n","====================Instance 13====================\n","| \tRunning...\n","===================================================\n","\n","\n","====================Instance 14====================\n","| \tRunning...\n","===================================================\n","\n","\n","====================Instance 15====================\n","| \tRunning...\n","===================================================\n","\n","\n","====================Instance 16====================\n","| \tRunning...\n","===================================================\n","\n","\n","====================Instance 17====================\n","| \tRunning...\n","===================================================\n","\n","\n","====================Instance 18====================\n","| \tRunning...\n","===================================================\n","\n","\n","====================Instance 19====================\n","| \tRunning...\n","===================================================\n","\n","\n","====================Instance 20====================\n","| \tRunning...\n","===================================================\n","\n","\n","====================Instance 21====================\n","| \tRunning...\n","===================================================\n","\n","\n","====================Instance 22====================\n","| \tRunning...\n","===================================================\n","\n","\n","====================Instance 23====================\n","| \tRunning...\n","===================================================\n","\n","\n","====================Instance 24====================\n","| \tRunning...\n","===================================================\n","\n","\n","====================Instance 25====================\n","| \tRunning...\n","===================================================\n","\n","\n","========================================\n","| \tDoing FalsePositive\n","========================================\n","\n","\n","====================Instance 0====================\n","| \tRunning...\n","==================================================\n","\n","\n","====================Instance 1====================\n","| \tRunning...\n","==================================================\n","\n","\n","====================Instance 2====================\n","| \tRunning...\n","==================================================\n","\n","\n","====================Instance 3====================\n","| \tRunning...\n","==================================================\n","\n","\n","====================Instance 4====================\n","| \tRunning...\n","==================================================\n","\n","\n","====================Instance 5====================\n","| \tRunning...\n","==================================================\n","\n","\n","====================Instance 6====================\n","| \tRunning...\n","==================================================\n","\n","\n","====================Instance 7====================\n","| \tRunning...\n","==================================================\n","\n","\n","====================Instance 8====================\n","| \tRunning...\n","==================================================\n","\n","\n","====================Instance 9====================\n","| \tRunning...\n","==================================================\n","\n","\n","====================Instance 10====================\n","| \tRunning...\n","===================================================\n","\n","\n","====================Instance 11====================\n","| \tRunning...\n","===================================================\n","\n","\n","====================Instance 12====================\n","| \tRunning...\n","===================================================\n","\n","\n","====================Instance 13====================\n","| \tRunning...\n","===================================================\n","\n","\n","========================================\n","| \tDoing FalseNegative\n","========================================\n","\n","\n","====================Instance 0====================\n","| \tRunning...\n","==================================================\n","\n","\n","====================Instance 1====================\n","| \tRunning...\n","==================================================\n","\n","\n","====================Instance 2====================\n","| \tRunning...\n","==================================================\n","\n","\n","====================Instance 3====================\n","| \tRunning...\n","==================================================\n","\n","\n","====================Instance 4====================\n","| \tRunning...\n","==================================================\n","\n","\n","====================Instance 5====================\n","| \tRunning...\n","==================================================\n","\n","\n","====================Instance 6====================\n","| \tRunning...\n","==================================================\n","\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":428},"id":"pCQPpelxWxl3","executionInfo":{"status":"ok","timestamp":1624258588985,"user_tz":-600,"elapsed":332,"user":{"displayName":"Leon C","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GirxcSFELKJsfIAZZuEJ9ZecG__1hzk1e5zOJAqUA=s64","userId":"16235014008629953036"}},"outputId":"69e866f3-2c5b-4c86-e914-c1ea613935e1"},"source":["cf_result_df"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>orgin_Pregnancies</th>\n","      <th>orgin_Glucose</th>\n","      <th>orgin_BloodPressure</th>\n","      <th>orgin_SkinThickness</th>\n","      <th>orgin_Insulin</th>\n","      <th>orgin_BMI</th>\n","      <th>orgin_DiabetesPedigreeFunction</th>\n","      <th>orgin_Age</th>\n","      <th>cf_Pregnancies</th>\n","      <th>cf_Glucose</th>\n","      <th>cf_BloodPressure</th>\n","      <th>cf_SkinThickness</th>\n","      <th>cf_Insulin</th>\n","      <th>cf_BMI</th>\n","      <th>cf_DiabetesPedigreeFunction</th>\n","      <th>cf_Age</th>\n","      <th>time(sec)</th>\n","      <th>prediction_type</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.0</td>\n","      <td>189.0</td>\n","      <td>56.065574</td>\n","      <td>23.0</td>\n","      <td>846.0</td>\n","      <td>30.1</td>\n","      <td>0.391938</td>\n","      <td>59.0</td>\n","      <td>1.00242</td>\n","      <td>187.974</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>183.386</td>\n","      <td>29.9843</td>\n","      <td>0.392136</td>\n","      <td>72</td>\n","      <td>78.335163</td>\n","      <td>TRUE POSITIVE</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>1.0</td>\n","      <td>180.0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>43.3</td>\n","      <td>0.275591</td>\n","      <td>41.0</td>\n","      <td>0.365841</td>\n","      <td>179.723</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>31.8597</td>\n","      <td>0.078</td>\n","      <td>67.8099</td>\n","      <td>14.994786</td>\n","      <td>TRUE POSITIVE</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>8.0</td>\n","      <td>179.0</td>\n","      <td>67.278689</td>\n","      <td>42.0</td>\n","      <td>130.0</td>\n","      <td>32.7</td>\n","      <td>0.713901</td>\n","      <td>36.0</td>\n","      <td>7.30735</td>\n","      <td>28.7452</td>\n","      <td>113.578</td>\n","      <td>41.7196</td>\n","      <td>258.184</td>\n","      <td>19.3712</td>\n","      <td>0.0985361</td>\n","      <td>21</td>\n","      <td>14.993416</td>\n","      <td>TRUE POSITIVE</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>8.0</td>\n","      <td>151.0</td>\n","      <td>72.885246</td>\n","      <td>32.0</td>\n","      <td>210.0</td>\n","      <td>42.9</td>\n","      <td>0.510292</td>\n","      <td>36.0</td>\n","      <td>2.38181</td>\n","      <td>46.3734</td>\n","      <td>114</td>\n","      <td>59.8044</td>\n","      <td>211.388</td>\n","      <td>20.6302</td>\n","      <td>0.078</td>\n","      <td>21</td>\n","      <td>14.889138</td>\n","      <td>TRUE POSITIVE</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>11.0</td>\n","      <td>138.0</td>\n","      <td>69.147541</td>\n","      <td>26.0</td>\n","      <td>144.0</td>\n","      <td>36.1</td>\n","      <td>0.551415</td>\n","      <td>50.0</td>\n","      <td>0.668462</td>\n","      <td>138.66</td>\n","      <td>0</td>\n","      <td>8.00212</td>\n","      <td>135.662</td>\n","      <td>36.1692</td>\n","      <td>0.558709</td>\n","      <td>72</td>\n","      <td>22.567652</td>\n","      <td>TRUE POSITIVE</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>1.0</td>\n","      <td>147.0</td>\n","      <td>87.836066</td>\n","      <td>41.0</td>\n","      <td>0.0</td>\n","      <td>49.3</td>\n","      <td>0.351818</td>\n","      <td>27.0</td>\n","      <td>0.263517</td>\n","      <td>198</td>\n","      <td>83.2929</td>\n","      <td>63.2597</td>\n","      <td>197.767</td>\n","      <td>51.8887</td>\n","      <td>0.488933</td>\n","      <td>30.1091</td>\n","      <td>14.946754</td>\n","      <td>FALSE NEGATIVE</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>0.0</td>\n","      <td>129.0</td>\n","      <td>102.786885</td>\n","      <td>46.0</td>\n","      <td>130.0</td>\n","      <td>67.1</td>\n","      <td>0.312701</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>198</td>\n","      <td>96.2958</td>\n","      <td>46.6341</td>\n","      <td>334.56</td>\n","      <td>59.4</td>\n","      <td>0.397517</td>\n","      <td>31.6994</td>\n","      <td>14.993821</td>\n","      <td>FALSE NEGATIVE</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>7.0</td>\n","      <td>103.0</td>\n","      <td>61.672131</td>\n","      <td>32.0</td>\n","      <td>0.0</td>\n","      <td>39.1</td>\n","      <td>0.337776</td>\n","      <td>31.0</td>\n","      <td>9.11826</td>\n","      <td>198</td>\n","      <td>42.0102</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>51.2057</td>\n","      <td>0.79941</td>\n","      <td>39.1839</td>\n","      <td>14.955365</td>\n","      <td>FALSE NEGATIVE</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>5.0</td>\n","      <td>97.0</td>\n","      <td>71.016393</td>\n","      <td>27.0</td>\n","      <td>0.0</td>\n","      <td>35.6</td>\n","      <td>0.371878</td>\n","      <td>52.0</td>\n","      <td>4.79995</td>\n","      <td>198</td>\n","      <td>69.4295</td>\n","      <td>6.39165</td>\n","      <td>0</td>\n","      <td>59.4</td>\n","      <td>0.372515</td>\n","      <td>52.282</td>\n","      <td>18.078688</td>\n","      <td>FALSE NEGATIVE</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>2.0</td>\n","      <td>93.0</td>\n","      <td>59.803279</td>\n","      <td>32.0</td>\n","      <td>160.0</td>\n","      <td>38.0</td>\n","      <td>0.668766</td>\n","      <td>23.0</td>\n","      <td>0</td>\n","      <td>198</td>\n","      <td>59.7367</td>\n","      <td>33.2836</td>\n","      <td>174.563</td>\n","      <td>40.8667</td>\n","      <td>0.665113</td>\n","      <td>34.7637</td>\n","      <td>21.250582</td>\n","      <td>FALSE NEGATIVE</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>80 rows × 18 columns</p>\n","</div>"],"text/plain":["    orgin_Pregnancies  orgin_Glucose  ...  time(sec)  prediction_type\n","0                 1.0          189.0  ...  78.335163    TRUE POSITIVE\n","0                 1.0          180.0  ...  14.994786    TRUE POSITIVE\n","0                 8.0          179.0  ...  14.993416    TRUE POSITIVE\n","0                 8.0          151.0  ...  14.889138    TRUE POSITIVE\n","0                11.0          138.0  ...  22.567652    TRUE POSITIVE\n","..                ...            ...  ...        ...              ...\n","0                 1.0          147.0  ...  14.946754   FALSE NEGATIVE\n","0                 0.0          129.0  ...  14.993821   FALSE NEGATIVE\n","0                 7.0          103.0  ...  14.955365   FALSE NEGATIVE\n","0                 5.0           97.0  ...  18.078688   FALSE NEGATIVE\n","0                 2.0           93.0  ...  21.250582   FALSE NEGATIVE\n","\n","[80 rows x 18 columns]"]},"metadata":{"tags":[]},"execution_count":187}]},{"cell_type":"code","metadata":{"id":"ma75W5GFyOgl"},"source":["## save the csv\n","cf_result_df.to_csv('cf_result_df.csv')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"pms1XmEr0PpP"},"source":["## read the csv\n","try_load_cf_result_df = pd.read_csv('cf_result_df.csv')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":236},"id":"BtBh1xXbW3o8","executionInfo":{"status":"ok","timestamp":1624258653108,"user_tz":-600,"elapsed":422,"user":{"displayName":"Leon C","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GirxcSFELKJsfIAZZuEJ9ZecG__1hzk1e5zOJAqUA=s64","userId":"16235014008629953036"}},"outputId":"02d315e5-490c-44b9-e8d5-dd307b119ff4"},"source":["try_load_cf_result_df.head(5)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>orgin_Pregnancies</th>\n","      <th>orgin_Glucose</th>\n","      <th>orgin_BloodPressure</th>\n","      <th>orgin_SkinThickness</th>\n","      <th>orgin_Insulin</th>\n","      <th>orgin_BMI</th>\n","      <th>orgin_DiabetesPedigreeFunction</th>\n","      <th>orgin_Age</th>\n","      <th>cf_Pregnancies</th>\n","      <th>cf_Glucose</th>\n","      <th>cf_BloodPressure</th>\n","      <th>cf_SkinThickness</th>\n","      <th>cf_Insulin</th>\n","      <th>cf_BMI</th>\n","      <th>cf_DiabetesPedigreeFunction</th>\n","      <th>cf_Age</th>\n","      <th>time(sec)</th>\n","      <th>prediction_type</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>189.0</td>\n","      <td>56.065574</td>\n","      <td>23.0</td>\n","      <td>846.0</td>\n","      <td>30.1</td>\n","      <td>0.391938</td>\n","      <td>59.0</td>\n","      <td>1.002416</td>\n","      <td>187.973984</td>\n","      <td>0.00000</td>\n","      <td>0.000000</td>\n","      <td>183.386398</td>\n","      <td>29.984333</td>\n","      <td>0.392136</td>\n","      <td>72.000000</td>\n","      <td>78.335163</td>\n","      <td>TRUE POSITIVE</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>180.0</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>43.3</td>\n","      <td>0.275591</td>\n","      <td>41.0</td>\n","      <td>0.365841</td>\n","      <td>179.722885</td>\n","      <td>0.00000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>31.859743</td>\n","      <td>0.078000</td>\n","      <td>67.809914</td>\n","      <td>14.994786</td>\n","      <td>TRUE POSITIVE</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>8.0</td>\n","      <td>179.0</td>\n","      <td>67.278689</td>\n","      <td>42.0</td>\n","      <td>130.0</td>\n","      <td>32.7</td>\n","      <td>0.713901</td>\n","      <td>36.0</td>\n","      <td>7.307346</td>\n","      <td>28.745222</td>\n","      <td>113.57814</td>\n","      <td>41.719631</td>\n","      <td>258.184082</td>\n","      <td>19.371237</td>\n","      <td>0.098536</td>\n","      <td>21.000000</td>\n","      <td>14.993416</td>\n","      <td>TRUE POSITIVE</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>8.0</td>\n","      <td>151.0</td>\n","      <td>72.885246</td>\n","      <td>32.0</td>\n","      <td>210.0</td>\n","      <td>42.9</td>\n","      <td>0.510292</td>\n","      <td>36.0</td>\n","      <td>2.381811</td>\n","      <td>46.373405</td>\n","      <td>114.00000</td>\n","      <td>59.804363</td>\n","      <td>211.387985</td>\n","      <td>20.630186</td>\n","      <td>0.078000</td>\n","      <td>21.000000</td>\n","      <td>14.889138</td>\n","      <td>TRUE POSITIVE</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>11.0</td>\n","      <td>138.0</td>\n","      <td>69.147541</td>\n","      <td>26.0</td>\n","      <td>144.0</td>\n","      <td>36.1</td>\n","      <td>0.551415</td>\n","      <td>50.0</td>\n","      <td>0.668462</td>\n","      <td>138.660248</td>\n","      <td>0.00000</td>\n","      <td>8.002121</td>\n","      <td>135.661850</td>\n","      <td>36.169235</td>\n","      <td>0.558709</td>\n","      <td>72.000000</td>\n","      <td>22.567652</td>\n","      <td>TRUE POSITIVE</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Unnamed: 0  orgin_Pregnancies  ...  time(sec)  prediction_type\n","0           0                1.0  ...  78.335163    TRUE POSITIVE\n","1           0                1.0  ...  14.994786    TRUE POSITIVE\n","2           0                8.0  ...  14.993416    TRUE POSITIVE\n","3           0                8.0  ...  14.889138    TRUE POSITIVE\n","4           0               11.0  ...  22.567652    TRUE POSITIVE\n","\n","[5 rows x 19 columns]"]},"metadata":{"tags":[]},"execution_count":192}]},{"cell_type":"markdown","metadata":{"id":"kTb8q-cV5ucm"},"source":["# CF"]},{"cell_type":"code","metadata":{"id":"TC1KVQW4XQT7"},"source":[" cf_pro_result_df = generate_df_for_all(all_packs, alibi_cf.counterfactual_proto_explain)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"MhGWA5OuyVgl"},"source":["## save the csv\n","cf_pro_result_df.to_csv('cf_pro_result_df.csv')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"47kSlixTdSI0"},"source":["## read the csv\n","try_load_cf_result_df = pd.read_csv('cf_pro_result_df.csv')"],"execution_count":null,"outputs":[]}]}